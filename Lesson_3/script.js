// https://www.codewars.com/join?language=javascript
// ---------------Kahoot---------//
// console.log([1, 2, 3] === [1, 2, 3]); // False

// const arr = [ 1,2,3]
// arr.push(4,5,6);
// // arr.push(5);
// // arr.push(6);
// console.log(arr);


// const arr = [7, 3, 8, 9, 2];

// console.log(arr.slice(3));



// const arr = [7, 3, 8, 3, 9, 3, 2];
// const idx = arr.indexOf(3) 
// // indexOf –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –µ–ª–µ–º–µ–Ω—Ç–∞ —è–∫—â–æ –≤—ñ–Ω –ø—Ä–∏—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ, —è–∫—â–æ –µ–ª–µ–º–µ–Ω—Ç –Ω–µ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ indexOf –ø–æ–≤–µ—Ä—Ç–∞—î  -1

// const nextIdx = arr.indexOf(3, idx + 1)
// console.log(nextIdx);




// –ú—É—Ç–∞–±–µ–ª—å–Ω—ñ —Ç–∞ —ñ–º—É—Ç–∞–±–µ–ª—å–Ω—ñ —Ç–∏–ø–∏ –¥–∞–Ω–∏—Ö
// https://developer.mozilla.org/en-US/docs/Glossary/Mutable
// const clients = ["Mango", "Poly", "Ajax"];
// const string = "script";

// // –Ü–º—É—Ç–∞–±–µ–ª—å–Ω—ñ
// string[0] = 'q'
// console.log(string);

// // –ú—É—Ç–∞–±–µ–ª—å–Ω—ñ
// clients.splice(1,1)
// console.log(clients);

// –ü–æ –ø–æ—Å–∏–ª–∞–Ω—é
// –°–∫–ª–∞–¥–Ω—ñ (—è–∫—â–æ –≥–æ–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–æ —Ç—ñ–ª—å–∫–∏ Object)
//  Object
//  Array
// const arr = [1, 2, 3];
// const arr1 = arr;

// arr.splice(1,0,999)
// console.log('arr',arr);
// console.log("arr1",arr1);
// arr1.splice(-1,1)
// console.log('arr',arr);
// console.log("arr1",arr1);

// –ü–æ –∑–Ω–∞—á–µ–Ω—é
// –ü—Ä–∏–º—ñ—Ç–∏–≤–Ω—ñ
// String
// Number
// Boolean
// null
// undefined


// let a = 10;
// let b = a;
// a = 15;
// console.log('a', a);
// console.log('b', b);
// b = 999;
// console.log('a', a);
// console.log('b', b);


// –ü–ï–†–ï–†–í–ê –î–û "20:30"


// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ Jazz —ñ Blues.
// –î–æ–¥–∞–π—Ç–µ "Rock'n'roll" –≤ –∫—ñ–Ω–µ—Ü—å.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// –ú–µ—Ç–æ–¥–∏ push unshift shift splice
// [] –ª—ñ—Ç–µ—Ä–∞–ª –º–∞—Å–∏–≤—É
//—ñ–Ω–¥–µ–∫—Å            0       1        2
// const genres = ['Jazz', 'Blues',"Rock'n'roll"];
// console.log(genres[genres.length]);
//–ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä  1       2
// genres.push("Rock'n'roll");
// const firstEl = genres[0]
// console.log(firstEl);
// const lastEl = genres[genres.length - 1]
// console.log(lastEl);
// const deleteFirstE = genres.shift();
// console.log(deleteFirstE);
// console.log(genres);
// genres.unshift('Country', 'Reggae');
// console.log(genres);
// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Array/splice
// genres.splice(-2 , 1, 'Country')

// console.log(genres);




// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—ñ–π –≤–µ–ª–∏—á–∏–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
// –ú–µ—Ç–æ–¥ split

// const values = '8 11';
// const arr = values.split(' ');
// const firstValue = Number(arr[0]);
// const lastValue = Number(arr[arr.length - 1]);
// const total = firstValue * lastValue;

// console.log(total);



// const values = 'asd 11';
// const arr = values.split(' ');
// const firstValue =arr[0];
// const lastValue = Number(arr[arr.length - 1]);
// console.log(isNaN(firstValue));
// // if(NumberisNaN(firstValue))
// console.log(firstValue);
// console.log(firstValue * lastValue);
// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN
// window.isNaN// –ø—Ä–∏–º—É—Å–æ–≤–æ  –ø—Ä–∏–≤–æ–¥–∏—Ç—å –¥–æ —Ç–∏–ø—É –¥–∞–Ω–∏—Ö Number

// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
// Number.isNaN// –ù–ï –ü–†–ò–í–û–î–ò–¢–¨ –¥–æ —Ç–∏–ø—É –¥–∞–Ω–∏—Ö Number




// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ –ø–µ—Ä—à–æ–≥–æ.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// // i += 1
// // i = i + 1

// for (let i = 0, num = 1; i < fruits.length; i += 1, num += 1) {
//     // console.log(`–ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä ${i+1}`, fruits[i]);
//     console.log(`–ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä ${num}`, fruits[i]);
// }





// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –∑–º—ñ–Ω–Ω–∏—Ö names —ñ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
// –ú–µ—Ç–æ–¥ split
// const names = 'Jacob,William,Solomon,Kate';
// const phones = '38001234567,38001112233,380055566377,38099912233';
// const arrNames = names.split(',');
// const arrPhones = phones.split(',')
// console.log(arrPhones);
// for (let i = 0; i < arrNames.length, i< arrPhones.length; i += 1){
//     console.log(`—ñ–º'—è: ${arrNames[i]} –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${arrPhones[i]}`);
// }




// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è –ø—Ä–æ–±—ñ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
// –º–µ—Ç–æ–¥–∏ splice pop shift
// const string = 'Welcome to the future';
// const words = string.split(' ');
// console.log(words);
// words.shift();
// console.log(words);
// words.pop();
// console.log(words);
// const str = words.join(' ');
// console.log(str);

// const string = 'Welcome to the future';
// const words = string.split(' ');
// console.log(words);
// console.log(words.slice(1,3).join(' '));
// console.log(words);


// const string = 'Welcome to the future';
// const words = string.split(' ');
// console.log(words);
// words.splice(0,1);
// words.splice(words.length -1,1); // console.log(words.splice(-1,1));
// console.log(words);

// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≤–µ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω—ñ–π –ø–æ—Ä—è–¥–æ–∫ –ª—ñ—Ç–µ—Ä) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –ú–µ—Ç–æ–¥–∏ split reverse join

// const string = 'Welcome to the future';
// // const arr = string.split('');
// // const rev = arr.reverse();
// // const result = rev.join('');
// const result = string.split('').reverse().join('');
// console.log(result);





// Example 7 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –º–∞—î –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.

// const numbers = [101, 78, 12, 76, 5, 11, 9];
// const min  = Math.min(...numbers)
// console.log(min);

// let min = numbers[0];
let a;
console.log(a);
console.log(object);
const prop = prompt()
console.log(prop);
// if(true){
//     if(true){

//     }
// }
// for (const number of numbers) {
//     if (number < min) {
//         min = number;
//     }
// }
// const numbers = [101, 78, 12, 76, 5, 11, 9];

// function foo(arr) {
// arr.splice(0,3)

// }
// foo(numbers)
// console.log(numbers);